sudo: false

dist: trusty

################################################################################
# addons
addons:
  apt:
    packages:
      - python-pygments

################################################################################
# notifications
notifications:
  email: false

################################################################################
# cache
cache:
  directories:
    - $HOME/build-cache
  timeout: 180
  yarn: true

################################################################################
# Templates
tmpl-test-deployment: &tmpl-test-deployment
  stage: test okramlabs.github.io deployment
  language: go
  go: 1.9
  script: 'curl https://okramlabs.github.io'

################################################################################
# defaults
before_install: skip
install: skip
before_script: skip
script: skip
after_success: skip
after_failure: skip
after_script: skip

################################################################################
# stages
stages:
  # verify pull request
  - name: verify pull request
    if: (type = pull_request) AND (branch = master)
  # test source
  - name: test src
    if: type IN (push, pull_request)
  # generate assets and additional content
  - name: generate assets and additional content
    if: (type = push) AND (branch = master)
  # build theme
  - name: build theme
    if: (type = push) AND (branch = master)
  # build site
  - name: build site
    if: (type = push) AND (branch = master)
  # deploy okramlabs.github.io
  - name: deploy okramlabs.github.io
    if: (type = push) AND (branch = master)
  # test okramlabs.github.io deployment
  - name: test okramlabs.github.io deployment
    if: (type = push) AND (branch = master)
  # create new release (only on tags on upstream)
  # pull request should never build that stage
  # only tags created from master of okramlabs/okramlabs.github.src
  # may need to explicitly set that in jobs under that stage
  - name: create new release
    if: (repo = okramlabs/okramlabs.github.src) AND (type != pull_request) AND (tag =~ ^v$)

################################################################################
# jobs
jobs:
  include:
    # test theme source
    - stage: verify pull request
      env: TASK=checks
      language: go
      go: 1.9
      script: echo "verify pull request"
    # test theme source
    - stage: test src
      env: TASK=test-theme
      language: node_js
      node_js: node
      script: echo "running tests" | tee > ~/build-cache/one
    # test site source
    - env: TASK=test-site
      language: go
      go: 1.9
      script: echo "running test site" | tee > ~/build-cache/test-site
    # generaate content and assets
    - stage: generate assets and additional content
      language: go
      go: 1.9
      script: echo "running generate assets" | tee > ~/build-cache/generate-assets
    # build a fresh theme
    - stage: build theme
      language: node_js
      node_js: node
      script: echo "running build theme" | tee > ~/build-cache/build-theme
    # build new site with theme built on previous step
    - stage: build site
      language: go
      go: 1.9
      script: echo "running build site" | tee > ~/build-cache/build-site
    # deploy to deploy okramlabs.github.io master
    - stage: deploy okramlabs.github.io
      language: go
      go: 1.9
      script: echo "deploy okramlabs.github.io script"
      before_deploy: echo "after_deploy okramlabs.github.io"
      deploy:
        skip_cleanup: true
        provider: script
        script: echo "deploy okramlabs.github.io"
        on:
          branch: master
      after_deploy: echo "after_deploy okramlabs.github.io"

    # test this deployment
    - <<: *tmpl-test-deployment
      env: TASK=test-site-1
      script: echo "Testing deployment 1 ..."

    - <<: *tmpl-test-deployment
      script: echo "Testing deployment 2 ..."
      env: TASK=test-site-2

    # if this is a release run additional tasks
    - stage: create new release
      env: TASK=upload-github-release
      language: go
      go: 1.9
      script: echo "create new release for github ..."
      before_deploy: echo "before_deploy okramlabs.github.io"
      deploy:
        skip_cleanup: true
        provider: script
        script: echo "deploy release to github"
      after_deploy: echo "after_deploy okramlabs.github.io"
